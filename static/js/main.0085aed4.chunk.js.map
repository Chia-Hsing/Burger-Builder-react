{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredients/BurgerIngredients.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/toolbar.module.css","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Layout/Layout.module.css","assets/Image/original.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","serviceWorker.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummarry/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","store/reducer/burgerBuilder.js","store/reducer/order.js","store/reducer/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENT","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","isRequired","trim","minlength","length","maxlength","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParam","res","orders","fetchedOrders","key","push","err","authSuccess","tokenId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","setAuthRedirectPath","path","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","authFail","authCheckState","getItem","module","exports","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","Button","btnType","join","disabled","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredients","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","withRouter","transformIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","Boolean","window","location","hostname","match","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","Layout","showSideDrawer","sideDrawerClosedHandler","drawerToggleHandler","prevState","content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientsSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","ings","orderSummary","burger","Spinner","onIngredientAdded","onIngredientRemoved","loading","burgerBuilder","totalPrice","ingName","actions","withErrorhandler","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrder","asyncAuth","App","onTryAutoSignup","routers","initialState","building","INGREDIENT_PRICES","meat","cheese","bacon","salad","action","updatedIngredient","updateState","updatedIngredient1","updateState1","setIngredient","fetchIngredientFailed","reducer","purchased","newOrder","order","authRedirectPath","authStart","authLogout","composeEnhancers","compose","rootReducer","combineReducers","orderReducer","burgerBuilderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.0085aed4.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT'\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\nexport const SET_INGREDIENT = 'SET_INGREDIENT'\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\n\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START'\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS'\nexport const FETCH_ORDER_FAIL = 'FETCH_ORDER_START'\n\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'\n\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties,\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true\n\n    if (!rules) {\n        return true\n    }\n\n    if (rules.isRequired) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    if (rules.minlength) {\n        isValid = value.length >= rules.minlength && isValid\n    }\n\n    if (rules.maxlength) {\n        isValid = value.length <= rules.maxlength && isValid\n    }\n    return isValid\n}\n","const aux = props => props.children\n\nexport default aux\n","import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders.js'\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name,\n    }\n}\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name,\n    }\n}\n\nexport const setIngredient = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENT,\n        ingredients: ingredients,\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\n    }\n}\n\nexport const initIngredients = () => {\n    return (dispatch) => {\n        axios\n            .get('/ingredients.json')\n            .then((response) => dispatch(setIngredient(response.data)))\n            .catch((error) => dispatch(fetchIngredientsFailed()))\n    }\n}\n","import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders.js'\n\n// action creator\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData,\n    }\n}\n\n// action creator\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error,\n    }\n}\n\n// action creator\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START,\n    }\n}\n\n// middleware\nexport const purchaseBurger = (orderData, token) => {\n    return (dispatch) => {\n        dispatch(purchaseBurgerStart())\n        axios\n            .post('/orders.json?auth=' + token, orderData)\n            .then((response) => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n            })\n            .catch((error) => dispatch(purchaseBurgerFail(error)))\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT,\n    }\n}\n\nexport const fetchOrderSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDER_SUCCESS,\n        orders: orders,\n    }\n}\n\nexport const fetchOrderFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDER_FAIL,\n        error: error,\n    }\n}\n\nexport const fetchOrderStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDER_START,\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return (dispatch) => {\n        dispatch(fetchOrderStart())\n        const queryParam = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\n        axios\n            .get('/orders.json' + queryParam)\n            .then((res) => {\n                const fetchedOrders = []\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key,\n                    })\n                }\n                dispatch(fetchOrderSuccess(fetchedOrders))\n            })\n            .catch((err) => {\n                dispatch(fetchOrderFail(err))\n            })\n    }\n}\n","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n}\n\nexport const authSuccess = (tokenId, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        tokenId: tokenId,\n        userId: userId,\n    }\n}\n\nexport const authFail = (err) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: err,\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('userId')\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return (dispatch) => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path,\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return (dispatch) => {\n        dispatch(authStart())\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true,\n        }\n        let url =\n            'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBN_fO3w8cyj1OPYLvZywMpTUPjEYvvGZc'\n\n        if (!isSignup) {\n            url =\n                'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBN_fO3w8cyj1OPYLvZywMpTUPjEYvvGZc'\n        }\n\n        axios\n            .post(url, authData)\n            .then((res) => {\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000)\n                localStorage.setItem('token', res.data.idToken)\n                localStorage.setItem('expirationDate', expirationDate)\n                localStorage.setItem('userId', res.data.localId)\n                dispatch(authSuccess(res.data.idToken, res.data.localId))\n                dispatch(checkAuthTimeout(res.data.expiresIn))\n            })\n            .catch((err) => {\n                dispatch(authFail(err.response.data.error))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    return (dispatch) => {\n        const token = localStorage.getItem('token')\n        if (!token) {\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout())\n            } else {\n                const userId = localStorage.getItem('userId')\n                dispatch(authSuccess(token, userId))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__wtQXh\",\"BreadTop\":\"BurgerIngredients_BreadTop__3M2jF\",\"Seeds1\":\"BurgerIngredients_Seeds1__p7_n-\",\"Seeds2\":\"BurgerIngredients_Seeds2__1nv0c\",\"Meat\":\"BurgerIngredients_Meat__1ylfY\",\"Cheese\":\"BurgerIngredients_Cheese__3qWpp\",\"Salad\":\"BurgerIngredients_Salad__nySHS\",\"Bacon\":\"BurgerIngredients_Bacon__3HC-C\"};","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-buger-7137c.firebaseio.com/'\n})\n\nexport default instance\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","import React from 'react'\nimport classes from './Backdrop.module.css'\n\nconst backdrop = props => (\n    props.show ? <div className = { classes.Backdrop } onClick = { props.clicked }></div> : null\n)\n\n\nexport default backdrop\n","import React, { Component } from 'react'\nimport classes from './Modal.module.css'\nimport Aux from '../../../hoc/Aux'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\n\nclass Modal extends Component {\n\n    shouldComponentUpdate (nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show = { this.props.show } clicked = { this.props.modalClosed }/>\n                <div \n                className = { classes.Modal }\n                style = {{\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: this.props.show ? '1' : '0'\n                }}\n                >\n                    { this.props.children }\n                </div>\n            </Aux>    \n        )\n    }\n}\n\nexport default Modal\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"toolbar_Toolbar__jvFgD\",\"Logo\":\"toolbar_Logo__1fqyy\",\"DesktopOnly\":\"toolbar_DesktopOnly__2DTvU\"};","import React from 'react'\nimport classes from './Button.module.css'\n\n\nconst button = props => (\n    <button \n    className = { [classes.Button, classes[props.btnType]].join(' ') }\n    onClick = { props.clicked }\n    disabled = { props.disabled }\n    >\n        { props.children }\n    </button>\n)\n\nexport default button\n","import React from 'react'\nimport classes from './Spinner.module.css'\n\nconst spinner = () => (\n    <div className={ classes.Loader }>Loading...</div>\n)\n\nexport default spinner\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","import React, { Component } from 'react'\nimport Modal from '../../components/UI/Modal/Modal'\nimport Aux from '../../hoc/Aux'\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        componentDidMount() {\n            this.reqInterceptor = axios.interceptors.request.use((req) => {\n                // every time we sent request to the back-end, the interceptor will set the property error in state to null.\n                this.setState({ error: null })\n                return req\n            })\n            this.resInterceptor = axios.interceptors.response.use(\n                (res) => res,\n                (error) => {\n                    // every time we receive response from the back-end, the interceptor will set the property error in state to err. We only care about the err.\n                    this.setState({ error: error })\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor)\n            // Because this withErrorHandler hoc component is going to wrap around any child component itself. So every time when we export that child component, withErrorHandler will also be called and the interceptors will be set repeatedly. In order to prevent leaking memory the led by set the interceptor over and over again. We have to remove it once we leave the component.\n            axios.interceptors.response.eject(this.resInterceptor)\n            // in order to eject the interceptor, we have to pass the reference of the interceptor which we set in the beginning.\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler\n","import React, { Component } from 'react'\nimport classes from './BurgerIngredients.module.css'\nimport PropTypes from 'prop-types'\n\nclass BurgerIngredients extends Component {\n    render() {\n        let ingredients = null\n\n        switch (this.props.type) {\n            case 'bread-bottom':\n                ingredients = <div className={classes.BreadBottom}></div>\n                break\n            case 'bread-top':\n                ingredients = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                )\n                break\n            case 'meat':\n                ingredients = <div className={classes.Meat}></div>\n                break\n            case 'cheese':\n                ingredients = <div className={classes.Cheese}></div>\n                break\n            case 'bacon':\n                ingredients = <div className={classes.Bacon}></div>\n                break\n            case 'salad':\n                ingredients = <div className={classes.Salad}></div>\n                break\n            default:\n                ingredients = null\n        }\n        return ingredients\n    }\n}\n\nBurgerIngredients.propTypes = {\n    type: PropTypes.string.isRequired,\n}\n\nexport default BurgerIngredients\n","import React from 'react'\nimport classes from './Burger.module.css'\nimport BurgerIngredients from '../Burger/BurgerIngredients/BurgerIngredients'\nimport { withRouter } from 'react-router-dom'\n//! withRouter helps us to get access to object’s properties and the closest <Route>'s match.\n//! withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n\nconst burger = (props) => {\n    let transformIngredients = Object.keys(props.ingredients) // [meat, cheese, bacon, salad ...]\n        .map((igKey) => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                // _ means I don't care about the first argument of the map method.\n                // just need the index of that array\n                // [0, 1, 2], [0]...\n                return <BurgerIngredients key={igKey + i} type={igKey} />\n                // return the 'component BurgerIngredients' with the key of the 'ingredients Object' plus the 'index of the new array'.\n                // key=cheese0 type=cheese ...\n                // return how many <BurgerIngredients /> by the amount of the array's item(index)'s\n            })\n        })\n\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, [])\n\n    // transformIngredients is a array\n\n    if (transformIngredients.length === 0) {\n        transformIngredients = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredients type=\"bread-top\" />\n            {transformIngredients}\n            <BurgerIngredients type=\"bread-bottom\" />\n        </div>\n    )\n}\n\nexport default withRouter(burger)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__1t8Hf\"};","module.exports = __webpack_public_path__ + \"static/media/original.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport burgerLogo from '../../assets/Image/original.png' \nimport classes from './Logo.module.css'\n\nconst logo = props => (\n    <div className = { classes.Logo } style = {{height: props.height}}>\n        <img src = { burgerLogo } alt = 'MyBurger'></img>\n    </div>\n)\n\nexport default logo\n","import React from 'react'\nimport classes from './NavigationItem.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst navigationItem = props => (\n    <li className = { classes.NavigationItem }>\n        <NavLink \n        to = { props.link }\n        activeClassName = { classes.active }\n        exact = { props.exact }\n        >{ props.children }</NavLink>\n    </li>\n)\n\nexport default navigationItem\n","import React from 'react'\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem'\nimport classes from './NavigationItems.module.css'\n\n\nconst navigationItems = (props) => (\n    <ul className = { classes.NavigationItems }>\n        <NavigationItem link = '/' exact>Burger Builder</ NavigationItem>\n        { props.isAuthenticated ? <NavigationItem link = '/orders'>Orders</ NavigationItem> : null }\n\n        { !props.isAuthenticated ? \n            <NavigationItem link = '/auth'>Authenticate</ NavigationItem> :\n            <NavigationItem link = '/logout'>Logout</ NavigationItem> \n        }\n    </ul>\n)\n\nexport default navigationItems\n","import React from 'react'\nimport classes from './DrawerToggle.module.css'\n\n\nconst drawerToggle = props => (\n    <div \n    onClick = { props.clicked }\n    className = { classes.DrawerToggle }>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default drawerToggle \n","import React from 'react'\nimport classes from './toolbar.module.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\n\nconst toolbar = props => (\n    <header className = { classes.Toolbar }>\n        <DrawerToggle clicked = { props.drawerToggleClicked } />\n        <div  className = { classes.Logo}>\n            <Logo/>\n        </div>    \n        <nav className = { classes.DesktopOnly }>\n            <NavigationItems isAuthenticated = { props.isAuth }/>\n        </nav>\n    </header>\n)\n\n\nexport default toolbar\n","import React from 'react'\nimport Logo from '../../../components/Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport classes from './SideDrawer.module.css'\nimport Backdrop from '../../../components/UI/Backdrop/Backdrop'\nimport Aux from '../../../hoc/Aux'\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close]\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Aux from '../../hoc/Aux'\nimport classes from './Layout.module.css'\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false })\n    }\n\n    drawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer } // when the value of state is going to use the previous state,  use the function with argument prevState to avoid problems.\n        })\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.drawerToggleHandler} isAuth={this.props.isAuthenticated} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler}\n                    isAuth={this.props.isAuthenticated}\n                />\n                <main className={classes.content}>{this.props.children}</main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n    }\n}\n\nexport default connect(mapStateToProps)(Layout)\n","import React from 'react'\nimport classes from './BuildControl.module.css'\n\nconst buildControl = props => (\n    <div className = { classes.BuildControl}>\n        <div className = { classes.Label }>{ props.label }</div>\n        <button \n        className = { classes.Less }\n        onClick = { props.removed }\n        disabled = { props.disabled }\n        >Less</button>\n        <button \n        className = { classes.More }\n        onClick = { props.added }\n        >More</button>\n    </div>\n)\n\nexport default buildControl \n","import React from 'react'\nimport classes from './BuildControls.module.css'\nimport BuildControl from './BuildControl/BuildControl'\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Meat', type: 'meat' },\n]\n\nconst buildControls = (props) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p>\n                current prices: <strong>{props.price.toFixed(2)}</strong>\n            </p>\n            {controls.map((ctl) => (\n                <BuildControl\n                    key={ctl.label}\n                    label={ctl.label}\n                    added={() => props.ingredientAdded(ctl.type)}\n                    removed={() => props.ingredientRemoved(ctl.type)}\n                    disabled={props.disabled[ctl.type]}\n                />\n            ))}\n            <button className={classes.OrderButton} disabled={!props.purchasable} onClick={props.ordered}>\n                {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n            </button>\n        </div>\n    )\n}\n\nexport default buildControls\n","import React, { Component } from 'react'\nimport Aux from '../../../hoc/Aux'\nimport Button from '../../UI/Button/Button'\n\n\nclass OrderSummary extends Component {\n    \n    render () {\n\n        const ingredientsSummary = Object.keys(this.props.ingredients)\n        .map( igKey =>  \n            <li key={ igKey }>\n                <span style = {{ textTransform: \"capitalize\" }}>\n                    { igKey }\n                </span> : \n                { this.props.ingredients[igKey] }\n            </li>\n        )\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A Delicious Burger With the Following Ingredients :</p>\n                <ul>\n                    { ingredientsSummary }\n                </ul>\n                <p><strong>Total Price: { this.props.price.toFixed(2) }</strong></p>\n                <p>Continue to Checkout ?</p>\n                <Button btnType = 'Danger' clicked = { this.props.purchaseCancelled }>Cancel</Button>\n                <Button btnType = 'Success' clicked = { this.props.purchaseContinued }>Continue</Button>\n            </Aux>\n        )\n    }\n}\n\nexport default OrderSummary\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Aux from '../../hoc/Aux'\n\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummarry/OrderSummary'\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorhandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../store/actions/index'\n\nexport class BurgerBuilder extends Component {\n    state = {\n        purchasing: false,\n        // This state provides the control of the modal UI.\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients()\n        // Get the ingredients from database.\n    }\n\n    // *This method will determine whether the order button is purchasable or not.\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            // Build a new arry which includes all the keys of the ingredients Object.\n            .map((igKey) => ingredients[igKey])\n            // Get all value in that array.\n            .reduce((sum, el) => {\n                // Calculate the sum of all items in that array.\n                return sum + el\n            }, 0)\n        return sum > 0\n        // return true of false\n    }\n\n    //* Add ingredients to burger.\n    /* addIngredientHandler = ( type ) => {  \n        const oldCount = this.state.ingredients[type]  \n        // the amount of the designated item.\n        let updatedCount = oldCount + 1\n        const updatedIngredients = {\n            ...this.state.ingredients  \n            // build a new object including the ingredient items.\n        }\n        updatedIngredients[type] = updatedCount  \n        // update the number of each ingredient\n\n        const priceAddition = INGREDIENT_PRICES[type]\n        // the price of the designated item.\n        const oldPrice = this.state.totalPrice\n        const newPrice = oldPrice + priceAddition  \n        // updating the total price.\n\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        })\n        this.updatePurchaseState(updatedIngredients) \n        // Must pass the updated Object to make the order button work properly.\n    }\n\n    removeIngredientHandler = ( type ) => {\n        const oldCount = this.state.ingredients[type]\n        if (oldCount <= 0) {  \n            return\n        }\n        let updatedCount = oldCount - 1\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updatedCount  \n        // updating the number of each ingredient\n\n        const priceDeduction = INGREDIENT_PRICES[type]\n        const oldPrice = this.state.totalPrice\n        const newPrice = oldPrice - priceDeduction  \n        // updating the total price.\n\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        })\n        this.updatePurchaseState(updatedIngredients)  \n        // must pass the updated Object to make it work properly.\n    } */\n\n    //* By changing the purchasing state to start or end the purchasing process (modal and backdrop).\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({ purchasing: true }) // press the order bottom.\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout')\n            // change the authRedirectPath state form / to /checkout\n            this.props.history.push('/auth')\n        }\n    }\n\n    //* When press the cancel bottom at order summary modal.\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    //* Once press the continue button at order summary.\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase()\n        this.props.history.push('/checkout')\n        /* const queryParams = []\n         for (let i in this.props.ings) {\n             queryParams.push( encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]) )\n         }) ////[ cheese = 1, bacon = 2 ...]\n         }\n         queryParams.push( 'price=' + this.props.price )\n         const queryString = queryParams.join('&')\n         //// cheese=1&bacon=2 ...&price=20\n         this.props.history.push({\n             pathname: '/checkout',\n             search: '?' + queryString */\n        ////.../checkout?cheese=1&bacon=2 ...&price=20\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings,\n        }\n        for (let key in disabledInfo) {\n            // extract all the keys in the new ingredients object.\n            disabledInfo[key] = disabledInfo[key] <= 0\n            // determine every item is true or false in that object.[salad: true, meat: false, and so on...]\n        }\n\n        let orderSummary = null\n        let burger = this.props.error ? <p>Something went wrong!</p> : <Spinner />\n\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        // control is the order button purchasable.\n                        ordered={this.purchaseHandler}\n                        // control the purchasing process.\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        // {salad: true, meat: false ...}\n                        price={this.props.price}\n                        isAuth={this.props.isAuthenticated}\n                    />\n                </Aux>\n            )\n\n            orderSummary = (\n                //* this component is controlling the order summary modal.\n                <OrderSummary\n                    ingredients={this.props.ings}\n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContinued={this.purchaseContinueHandler}\n                    price={this.props.price}\n                />\n            )\n\n            if (this.state.loading) {\n                orderSummary = <Spinner />\n            }\n        }\n\n        return (\n            <Aux>\n                <div>\n                    <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                        {orderSummary}\n                    </Modal>\n                    {burger}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorhandler(BurgerBuilder, axios))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport * as actions from '../../../store/actions/index'\n\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.onLogout()\n    }\n\n    render () {\n        return <Redirect to = '/' />\n    }\n}\n\n\n\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)\n","import React, { Component } from 'react'\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null,\n        }\n\n        componentDidMount() {\n            importComponent().then((cmp) => {\n                this.setState({ component: cmp.default })\n            })\n        }\n        render() {\n            const C = this.state.component\n\n            return C ? <C {...this.props} /> : null\n        }\n    }\n}\n\nexport default asyncComponent\n","import React, { Component } from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/index'\nimport asyncComponent from './hoc/asyncComponent/asyncComponent'\n\nconst asyncCheckout = asyncComponent(() => {\n    return import('./containers/CheckOut/CheckOut')\n})\n\nconst asyncOrder = asyncComponent(() => {\n    return import('./containers/Orders/Orders')\n})\n\nconst asyncAuth = asyncComponent(() => {\n    return import('./containers/Auth/Auth')\n})\n\n//! the methods above are lazy loading.\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onTryAutoSignup()\n    }\n\n    render() {\n        let routers = (\n            <Switch>\n                <Route path=\"/auth\" component={asyncAuth} />\n                <Route path=\"/\" exact component={BurgerBuilder} />\n                <Redirect to=\"/\" />\n            </Switch>\n        )\n\n        if (this.props.isAuthenticated) {\n            routers = (\n                <Switch>\n                    <Route path=\"/checkout\" component={asyncCheckout} />\n                    <Route path=\"/orders\" component={asyncOrder} />\n                    <Route path=\"/logout\" component={Logout} />\n                    <Route path=\"/auth\" component={asyncAuth} />\n                    <Route path=\"/\" exact component={BurgerBuilder} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            )\n        }\n\n        return (\n            <div>\n                <Layout>{routers}</Layout>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false,\n}\n\nconst INGREDIENT_PRICES = {\n    // Defining the price of every ingredients.\n    meat: 1.3,\n    cheese: 0.6,\n    bacon: 0.9,\n    salad: 1,\n}\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n    const updateState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n    }\n    return updateObject(state, updateState)\n}\n\nconst removeIngredient = (state, action) => {\n    const updatedIngredient1 = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngredients1 = updateObject(state.ingredients, updatedIngredient1)\n    const updateState1 = {\n        ingredients: updatedIngredients1,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n    }\n    return updateObject(state, updateState1)\n}\n\nconst setIngredient = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            cheese: action.ingredients.cheese,\n            bacon: action.ingredients.meat,\n            meat: action.ingredients.meat,\n        },\n        error: false,\n        totalPrice: 4,\n        building: false,\n    })\n}\n\nconst fetchIngredientFailed = (state, action) => {\n    return updateObject(state, { error: true })\n}\n\nconst reducer = (state = initialState, action) => {\n    // eslint-disable-next-line default-case\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return addIngredient(state, action)\n        case actionTypes.REMOVE_INGREDIENT:\n            return removeIngredient(state, action)\n        case actionTypes.SET_INGREDIENT:\n            return setIngredient(state, action)\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return fetchIngredientFailed(state, action)\n    }\n    return state\n}\n\nexport default reducer\n","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT : \n            return updateObject(state, { purchased: false })\n\n        case actionTypes.PURCHASE_BURGER_START :\n            return updateObject(state, { loading: true })\n\n        case actionTypes.PURCHASE_BURGER_SUCCESS : \n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId\n            }\n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                order: state.orders.concat(newOrder)\n            }) \n\n        case actionTypes.PURCHASE_BURGER_FAIL : \n            return updateObject(state, { loading: false })\n\n        case actionTypes.FETCH_ORDER_START : \n            return updateObject(state, { loading: true })\n\n        case actionTypes.FETCH_ORDER_SUCCESS : \n            return updateObject(state, {\n            orders: action.orders,\n            loading: false\n        })\n\n        case actionTypes.FETCH_ORDER_FAIL : \n            return updateObject(state, { loading: false })\n             \n        default : \n        return state\n    }\n}\n\n\nexport default reducer\n","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, { \n        token: action.tokenId,\n        userId: action.userId,\n        error: null, \n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, { \n        error: action.error, \n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { tokenId: null, userId: null })\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch(action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\n        default: return state\n    }\n}\n\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css'\nimport App from './App'\nimport burgerBuilderReducer from './store/reducer/burgerBuilder'\nimport orderReducer from './store/reducer/order'\nimport authReducer from './store/reducer/auth'\n\nconst composeEnhancers =\n    process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose\n\nconst rootReducer = combineReducers({\n    order: orderReducer,\n    burgerBuilder: burgerBuilderReducer,\n    auth: authReducer,\n})\n\n//* redux middleware\n/* const logger = (store) => {\n    return (next) => {\n        return (action) => {\n            console.log('middleware', action)\n            const result = next(action)\n            console.log('middleware', store.getState())\n            return result\n        }\n    }\n} */\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}